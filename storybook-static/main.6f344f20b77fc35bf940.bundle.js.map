{"version":3,"file":"main.6f344f20b77fc35bf940.bundle.js","sources":["webpack:///./src/components/Button/ButtonBase.tsx"],"sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\nimport {theme} from \"../../theme/theme\";\n\nexport enum HeightButton {\n    small = 32,\n    medium = 40,\n    large = 48\n}\n\nexport interface IButtonBaseProps {\n    disabled?: boolean;\n    loading?: boolean;\n    className?: string;\n    heightButton: HeightButton;\n}\n\nconst Button: React.FC<{}> = (props) => {\n    return <button {...props}>{props.children}</button>;\n};\n\nexport const ButtonBase = styled(Button)`\n    @properties disabled, loading;\n    border: 0;\n    border-radius: 4px;\n    cursor: pointer;\n    text-align: center;\n    padding: 0 16px;\n    height: ${(props: IButtonBaseProps) => {\n        return `${props.heightButton || HeightButton.medium}px`;\n    }}\n    line-height: ${(props: IButtonBaseProps) => {\n        return `${props.heightButton || HeightButton.medium}px`;\n    }}\n    transition-property: background, border, color;\n    transition-timing-function: ease-in-out;\n    transition-duration: 0.3s;\n    &[disabled] {\n        border: 1px solid ${theme.colors.disabled}!important;\n        background: ${theme.colors.disabled}!important;\n        cursor: default;\n        color: ${theme.colors.white}!important;\n    }\n    &[loading] {\n        text-indent: -9999px;\n        white-space: nowrap;\n        overflow: hidden;\n        &:before {\n            color: ${theme.colors.darkGrey};\n            display: block;\n            filter: progid:DXImageTransform.Microsoft.Alpha(enabled=false);\n            margin: ${(props: IButtonBaseProps) => {\n                return `${(props.heightButton || HeightButton.medium) / 8}px auto`;\n            }};\n            opacity: 1;\n        }\n    }\n    &:before {\n        animation-duration: 1s;\n        animation-iteration-count: infinite;\n        animation-name: rotate;\n        animation-timing-function: linear;\n        border: 4px solid;\n        border-left-color: transparent;\n        border-radius: 50%;\n        content: '';\n        display: none;\n        filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=0);\n        height: ${(props: IButtonBaseProps) => {\n            return `${(props.heightButton || HeightButton.medium) / 2}px`;\n        }};\n        opacity: 0;\n        width: ${(props: IButtonBaseProps) => {\n            return `${(props.heightButton || HeightButton.medium) / 2}px`;\n        }};;        \n    }\n    @keyframes rotate {\n        0% {\n            transform: rotate(0deg);\n        }\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n`;\ntry {\n    // @ts-ignore\n    ButtonBase.displayName = \"ButtonBase\";\n    // @ts-ignore\n    ButtonBase.__docgenInfo = { \"description\": \"\", \"displayName\": \"ButtonBase\", \"props\": { \"disabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"disabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"loading\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"loading\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"className\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"className\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"heightButton\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"heightButton\", \"required\": true, \"type\": { \"name\": \"HeightButton\" } }, \"theme\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"theme\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"as\": { \"defaultValue\": null, \"description\": \"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\", \"name\": \"as\", \"required\": false, \"type\": { \"name\": \"\\\"symbol\\\" | \\\"object\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 156 more ... | FunctionComponent<...>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/ButtonBase.tsx#ButtonBase\"] = { docgenInfo: ButtonBase.__docgenInfo, name: \"ButtonBase\", path: \"src/components/Button/ButtonBase.tsx#ButtonBase\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"mappings":"AAIA","sourceRoot":""}